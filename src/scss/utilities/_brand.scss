/*

  BRAND 2025
  --- 

*/

/*
  New brand 2025 hooks
*/

:root {
  --hook-border-thickness: 30px;
  --hook-border-thickness-medium: 40px;
  --gutter-offset: -24px;
  --gutter-offset-medium: -40px;
  --gutter-offset-large: -50px;
  --hook-height: 80px;
  --hook-height-medium: 100px;
}

.u-hook {
  position: relative;
}

.u-hook > *::before {
  content: "";
  position: absolute;
  z-index: 2;
  height: var(--hook-height);
  width: 100%;
}

.u-hook > *::after {
  content: "";
  position: absolute;
  z-index: 2;
  height: 20%;
}

// Top Right
.u-hook-tr > *::before {
  top: calc(0px - var(--hook-border-thickness));
  border-top: var(--hook-border-thickness) solid map-get($greens, "medium");
  border-right: var(--hook-border-thickness) solid map-get($greens, "medium");
}

// Top Right full bleed
.u-hook-tr.u-hook-full-bleed::before {
  content: "";
  position: absolute;
  border-top: var(--hook-border-thickness) solid map-get($greens, "medium");
  border-left: var(--hook-border-thickness) solid map-get($greens, "medium");
  top: calc(0px - var(--hook-border-thickness));
  left: 0;
  width: 50vw;
}

// Top leftsad
.u-hook-tl > *::before {
  top: 0;
  border-top: var(--hook-border-thickness) solid map-get($greens, "medium");
  border-left: var(--hook-border-thickness) solid map-get($greens, "medium");
}

// Bottom left
.u-hook-bl > *::before {
  bottom: calc(0px - var(--hook-border-thickness));
  border-bottom: var(--hook-border-thickness) solid map-get($greens, "medium");
  border-left: var(--hook-border-thickness) solid map-get($greens, "medium");
}

// Bottom left full bleed
.u-hook-bl.u-hook-full-bleed::before {
  content: "";
  position: absolute;
  border-bottom: var(--hook-border-thickness) solid map-get($greens, "medium");
  border-left: var(--hook-border-thickness) solid map-get($greens, "medium");
  bottom: calc(0px - var(--hook-border-thickness));
  right: 0;
  width: 50vw;
}

// Bottom right
.u-hook-br > *::after {
  height: var(--hook-height);
  width: 100%;
  bottom: 0;
  left: 0;
  border-bottom: var(--hook-border-thickness) solid map-get($greens, "medium");
  border-right: var(--hook-border-thickness) solid map-get($greens, "medium");
}

// Adjust left offset for wrapper specifically
.u-hook-bl > .c-wrapper-2025 {
  margin-bottom: 60px;
  &::before {
    left: var(--gutter-offset);
  }
}

.u-hook-tr > .c-wrapper-2025 {
  margin-top: 60px;
  &::before {
    right: var(--gutter-offset);
  }
}

@include breakpoint(medium up) {
  // Define common variables inside the breakpoint
  $neg-border-medium: calc(0px - var(--hook-border-thickness-medium));

  // Hook height adjustments
  .u-hook > *::before,
  .u-hook-br > *::after {
    height: var(--hook-height-medium);
    border-width: var(--hook-border-thickness-medium);
  }

  .u-hook-bl > *::after {
    height: var(--hook-height);
  }

  .u-hook-tr > *::before {
    top: $neg-border-medium;
  }

  .u-hook-bl > *::before {
    bottom: $neg-border-medium;
  }

  // wrapper-2025 adjustments
  .u-hook-tr > .c-wrapper-2025::before {
    right: var(--gutter-offset-medium);
    top: $neg-border-medium;
  }

  .u-hook-bl > .c-wrapper-2025::before {
    left: var(--gutter-offset-medium);
    bottom: $neg-border-medium;
  }

  // Full bleed adjustments
  .u-hook-bl.u-hook-full-bleed::before,
  .u-hook-tr.u-hook-full-bleed::before {
    border-width: var(--hook-border-thickness-medium);
  }

  .u-hook-bl.u-hook-full-bleed::before {
    bottom: $neg-border-medium;
  }

  .u-hook-tr.u-hook-full-bleed::before {
    top: $neg-border-medium;
  }

  // Margin adjustments
  .u-hook-bl > .c-wrapper-2025 {
    margin-bottom: 80px;
  }

  .u-hook-tr > .c-wrapper-2025 {
    margin-top: 80px;
  }
}

@include breakpoint(large up) {
  .u-hook_tr > .c-wrapper-2025::before {
    right: var(--gutter-offset-large);
  }

  .u-hook-bl > .c-wrapper-2025::before {
    left: var(--gutter-offset-large);
  }
}

.u-hook {
  @each $name, $color in $uos-colour-group-palette {
    &.#{$name} {
      > *::after {
        border-color: map-get($color, "medium");
      }

      > *::after {
        border-color: map-get($color, "medium");
      }

      > *::before {
        border-color: map-get($color, "medium");
      }

      > *::before {
        border-color: map-get($color, "medium");
      }

      &.u-hook-full-bleed::before {
        border-color: map-get($color, "medium");
      }
    }
  }
}

/* 
  Colour overrides
*/

.u-hook.teals {
  > *::before {
    border-color: map-get($teals, "light");
  }

  > *::after {
    border-color: map-get($teals, "light");
  }
}

.u-hook.teals.u-hook-full-bleed::before {
  border-color: map-get($teals, "light");
}

.u-hook.neutrals {
  > *::before {
    border-color: map-get($neutrals, "light");
  }

  > *::after {
    border-color: map-get($neutrals, "light");
  }
}

.u-hook.neutrals.u-hook-full-bleed::before {
  border-color: map-get($neutrals, "light");
}

.u-hook.neutral-green {
  > *::before {
    border-color: map-get($greens, "medium");
  }

  > *::after {
    border-color: map-get($greens, "medium");
  }
}

.u-hook.neutral-green.u-hook-full-bleed::before {
  border-color: map-get($greens, "medium");
}

/*
  Dark themes of the hooks
*/

.u-hook.dark.greens {
  > *::before {
    border-color: map-get($greens, "dark");
  }

  > *::after {
    border-color: map-get($greens, "dark");
  }
}

.u-hook.dark.greens.u-hook-full-bleed::before {
  border-color: map-get($greens, "dark");
}

.u-hook.dark.neutrals {
  > *::before {
    border-color: map-get($neutrals, "medium");
  }

  > *::after {
    border-color: map-get($neutrals, "medium");
  }
}

.u-hook.dark.neutrals.u-hook-full-bleed::before {
  border-color: map-get($neutrals, "medium");
}

/*
  .c-wrapper-2025 dark overrides & additions
*/

.c-wrapper-2025.greens.dark {
  background-color: map-get($greens, "medium");
  &.u-bleed {
    border-image-source: linear-gradient(map-get($greens, "medium"), map-get($greens, "medium"));
  }
}

.c-wrapper-2025.teals.dark {
  background-color: map-get($teals, "medium");
  &.u-bleed {
    border-image-source: linear-gradient(map-get($teals, "medium"), map-get($teals, "medium"));
  }
}

.c-wrapper-2025.pinks.dark {
  background-color: map-get($pinks, "dark");
  &.u-bleed {
    border-image-source: linear-gradient(map-get($pinks, "dark"), map-get($pinks, "dark"));
  }
}

.c-wrapper-2025.purples.dark {
  background-color: map-get($purples, "dark");
  &.u-bleed {
    border-image-source: linear-gradient(map-get($purples, "dark"), map-get($purples, "dark"));
  }
}

.c-wrapper-2025.blues.dark {
  background-color: map-get($blues, "dark");
  &.u-bleed {
    border-image-source: linear-gradient(map-get($blues, "dark"), map-get($blues, "dark"));
  }
}

.c-wrapper-2025.neutrals.dark,
.neutrals.dark .c-wrapper-2025.u-bleed.u-bleed {
  background-color: map-get($neutrals, "dark");
  &.u-bleed {
    border-image-source: linear-gradient(map-get($neutrals, "dark"), map-get($neutrals, "dark"));
  }
}

/*
.c-wrapper-2025 light additions
*/

.neutrals .c-wrapper-2025.u-bleed {
  background-color: white;
  &.u-bleed {
    border-image-source: linear-gradient($white, white);
  }
}

.neutral-green .c-wrapper-2025.u-bleed {
  background-color: map-get($neutrals, "tint-7");
  &.u-bleed {
    border-image-source: linear-gradient(map-get($neutrals, "tint-7"), map-get($neutrals, "tint-7"));
  }
}

.neutral-green .c-wrapper-2025 {
  background-color: map-get($neutrals, "tint-7");
}

/*
  u-border bleed
*/
// Create a mixin for border-bleed gradients
@mixin border-bleed($direction, $color) {
  @if $direction == "left" {
    background-image: linear-gradient(90deg, $color 30%, transparent 70%);
  } @else if $direction == "right" {
    background-image: linear-gradient(90deg, transparent 70%, $color 30%);
  }
}

.u-border-bleed {
  display: block;
  height: var(--hook-border-thickness);
  background-origin: border-box;
  background-clip: border-box;
}

@include breakpoint(medium up) {
  .u-border-bleed {
    height: var(--hook-border-thickness-medium);
  }
}

.u-border-bleed-left {
  @include border-bleed("left", map-get($greens, "medium"));
}

.u-border-bleed-right {
  @include border-bleed("right", map-get($greens, "medium"));
}

.u-border-bleed-left.teals {
  @include border-bleed("left", map-get($teals, "light"));
}

.u-border-bleed-right.teals {
  @include border-bleed("right", map-get($teals, "light"));
}

.u-border-bleed-left.pinks {
  @include border-bleed("left", map-get($pinks, "medium"));
}

.u-border-bleed-right.pinks {
  @include border-bleed("right", map-get($pinks, "medium"));
}

.u-border-bleed-left.blues {
  @include border-bleed("left", map-get($blues, "medium"));
}

.u-border-bleed-right.blues {
  @include border-bleed("right", map-get($blues, "medium"));
}

.u-border-bleed-left.purples {
  @include border-bleed("left", map-get($purples, "medium"));
}

.u-border-bleed-right.purples {
  @include border-bleed("right", map-get($purples, "medium"));
}

.u-border-bleed-left.neutrals {
  @include border-bleed("left", map-get($brand-palette, "light-mink"));
}

.u-border-bleed-right.neutrals {
  @include border-bleed("right", map-get($brand-palette, "light-mink"));
}

.u-border-bleed-left.dark.neutrals {
  @include border-bleed("left", map-get($neutrals, "medium"));
}

.u-border-bleed-right.dark.neutrals {
  @include border-bleed("right", map-get($neutrals, "medium"));
}

/* 

  BRAND BORDERS
  ---
 
  Used on promo boxes
  in conjunction with u-relative u-overflow-hidden on the parent

*/

:root {
  --border-thickness: 3px;
}

.u-energy-line-bottom-float:after {
  content: "";
  background-color: $energy-green;
  height: 4px;
  left: 0;
  margin: 0 auto;
  position: absolute;
  right: 0;
  bottom: 0px;
  width: 100%;
}

/*
  Regular borders
  default 3px width but you can use u-border-width-4 / u-border-width-5 to overide
*/

/* 
  White 
*/

.u-white-line-top {
  border-top: var(--border-thickness) solid #fff;
}

/* 
  Energy green 
*/

.u-energy-line-top,
.u-green-line-top {
  border-top: var(--border-thickness) solid $energy-green;
}

.u-energy-line-bottom {
  border-bottom: var(--border-thickness) solid $energy-green;
}

.u-energy-line-left {
  border-left: var(--border-thickness) solid $energy-green;
}

/* 
  Heritage green
*/

.u-heritage-line {
  border: var(--border-thickness) solid map-get($greens, "medium") !important;
}

.u-heritage-line-top,
.u-heritage-green-line-top {
  border-top: var(--border-thickness) solid map-get($greens, "medium");
}

.u-heritage-line-bottom,
.u-heritage-green-line-bottom {
  border-bottom: var(--border-thickness) solid map-get($greens, "medium");
}

.u-heritage-line-left,
.u-heritage-green-line-left {
  border-left: var(--border-thickness) solid map-get($greens, "medium");
}

/* 
  Energy Pink 
*/

.u-energy-pink-line-top {
  border-top: var(--border-thickness) solid $energy-pink;
}

.u-energy-pink-line-bottom {
  border-bottom: var(--border-thickness) solid $energy-pink;
}

.u-energy-pink-line-left {
  border-left: var(--border-thickness) solid $energy-pink;
}

/* 
  Energy turq 
*/

.u-energy-turq-line-top {
  border-top: var(--border-thickness) solid $energy-turq;
}

// .u-energy-turq-line-bottom {
//   border-bottom: var(--border-thickness) solid $energy-turq;
// }

.u-energy-turq-line-left {
  border-left: var(--border-thickness) solid $energy-turq;
}

/* 
  Energy purple 
*/

.u-energy-purple-line-top {
  border-top: var(--border-thickness) solid $energy-purple;
}

// .u-energy-purple-line-bottom {
//   border-bottom: var(--border-thickness) solid $energy-purple;
// }

.u-energy-purple-line-left {
  border-left: var(--border-thickness) solid $energy-purple;
}

/* 
  Heritage purple 
*/

.u-heritage-purple-line-left {
  border-left: var(--border-thickness) solid $heritage-purple;
}

/* 
  Heritage berry 
*/

.u-heritage-berry-line-top {
  border-top: var(--border-thickness) solid $heritage-berry;
}

// .u-heritage-berry-line-bottom {
//   border-bottom: var(--border-thickness) solid $energy-berry;
// }

.u-heritage-berry-line-left {
  border-left: var(--border-thickness) solid $heritage-berry;
}

/* 
  Grey 
*/

.u-grey-line-bottom {
  border-bottom: var(--border-thickness) solid $light-gray-2;
}

.u-grey-line-left {
  border-left: 1px solid $light-gray-2;
}

.u-medium-grey-line {
  border: 1px solid $medium-gray;
}

/*
  General Borders
*/

.u-border-bottom-hover {
  border-bottom: 1px solid currentColor;
  &:hover {
    border-bottom: 1px solid tint($energy-green, 70%);
  }
}

.u-border {
  border: 1px solid #eee;
}

.u-border-none {
  border: none !important;
}

.u-border-hover-none:hover {
  border: none !important;
}

.u-border-solid {
  border: 1px solid currentColor;
}

.u-border-left-solid {
  border-left: 1px solid currentColor;
}

.u-border-right-solid {
  border-right: 1px solid currentColor;
}

.u-border-bottom-solid,
.u-underline {
  border-bottom: 1px solid currentColor;
}

.u-border-top-solid {
  border-top: 1px solid currentColor;
}

.u-border-width-2,
.u-border-width-2:hover {
  border-width: 2px;
}

.u-border-width-4 {
  border-width: 4px;
}

.u-border-width-5 {
  border-width: 5px;
}

/* Borders for medium down */

@media screen and #{breakpoint(medium down)} {
  .u-no-border-medium {
    border: none;
  }
}

/*
  Icons
  To control size best to use with one of the foundation helper font size classes eg h3
  eg <span class="uos-money u-icon h3"></span>
*/

.u-icon {
  color: map-get($greens, "medium");
  margin: 0;

  &::before {
    color: map-get($greens, "medium");
  }
}

svg.u-icon {
  width: 1.125rem;
  height: 1.125rem;
  display: inline-block;
}

.u-white--all .u-icon {
  &::before {
    color: $white;
  }
}

.svg-icon {
  width: 100%; /* Safari fix */
}

.u-svg-icon-24 {
  width: 24px;
  height: 24px;
}

.u-svg-icon-36 {
  width: 36px;
  height: 36px;
}

/* 
  Icon labels
  Eg on search results 
*/
[data-label-icon]::before {
  font-family: "uos" !important;
  font-size: 1rem;
  position: absolute;
  left: -32px;
  color: #fff;
  background-color: map-get($greens, "medium");
  top: 0;
  padding: 0.3rem 0;
  text-align: center;
  width: 32px; /* should match Foundation's grid-container gutter width */
}

[data-label-icon="pin"]::before {
  content: "\e964";
}

[data-label-icon="startdates"]::before {
  content: "\e99b";
}

[data-label-icon="computer"]::before {
  content: "\e907";
}

[data-label-icon="course"]::before {
  content: "\e9a1";
}

[data-label-icon="news"]::before {
  content: "\e9a3";
}

[data-label-icon="event"]::before {
  content: "\e9a2";
}

[data-label-icon*="output"]::before {
  content: "\e9a4";
}

[data-label-icon*="person"]::before {
  content: "\e9a5";
}

[data-label-icon="document"]::before {
  content: "\e92a";
}

/*
    HOOK STYLES 
    Styles a hook under the content wrapped with the class '.hook'.
*/

.hook {
  display: inline-block;
  position: relative;
}

.hook-right {
  padding: 0 20px 20px 0;
}

.hook-left {
  padding: 0 0 20px 20px;
}

.hook::before,
.hook::after {
  background-color: currentColor;
  bottom: 0;
  content: "" !important;
  position: absolute;
}

.hook::before {
  height: 31px;
  width: 7px;
}

.hook-right::before {
  right: 0;
}

.hook-left::before {
  left: 0;
}

.hook::after {
  height: 8px;
  left: 0;
  width: 100%;
}

.hook-skinny::before {
  height: 24px;
  width: 5px;
}

.hook-skinny::after {
  height: 5px;
}

.hook-infinite {
  max-width: max-content;

  &::after {
    width: 100vw;
  }
  &.hook-right::after {
    left: auto;
    right: 0;
  }
}

.hook-energy-green::after,
.hook-energy-green::before {
  background-color: $energy-green;
}

@include breakpoint(small down) {
  .remove-hook-for-small > * {
    &::after {
      content: none;
    }
    &::before {
      content: none;
    }
  }
}
