/* Layout Helpers (Foundation) */

.flex-container {
  display: flex;
}

.flex-dir-column {
  flex-direction: column;
}

.align-middle {
  align-items: center;
}

.align-center {
  justify-content: center;
  place-items: center;
}

.align-right {
  justify-content: flex-end;
}

.align-stretch {
  align-items: stretch;
}

.align-top {
  align-items: flex-start;
}

.align-bottom {
  align-items: flex-end;
}

.align-justify {
  justify-content: space-between;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.text-left {
  text-align: left;
}

.float-right {
  float: right;
}

/* GRID */

.grid-x {
  display: grid;
  column-gap: 1.5rem;
  grid-template-columns: repeat(12, minmax(0, 1fr));
}

@include breakpoint(small down) {
  .grid-x {
    row-gap: 1.5rem;
  }
}

.grid-x > .cell {
  grid-column-end: span 12;
  width: 100%;
}
.grid-x > .cell.small-1 {
  grid-column-end: span 1;
}
.grid-x > .cell.small-2 {
  grid-column-end: span 2;
}
.grid-x > .cell.small-3 {
  grid-column-end: span 3;
}
.grid-x > .cell.small-4 {
  grid-column-end: span 4;
}
.grid-x > .cell.small-6 {
  grid-column-end: span 6;
}
.grid-x > .cell.small-8 {
  grid-column-end: span 8;
}
.grid-x > .cell.small-10 {
  grid-column-end: span 10;
}
.grid-x > .cell.small-11 {
  grid-column-end: span 11;
}
.grid-x > .cell.small-12 {
  grid-column-end: span 12;
}

.grid-x.small-up-1 > .cell {
  grid-column-end: span 12;
}

.show-for-sr,
.show-on-focus {
  position: absolute !important;
  width: 1px;
  height: 1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.show-for-small-only {
  display: none;
}

.show-for-medium {
  display: none;
}

.show-for-large {
  display: none;
}

.show-for-xlarge {
  display: none;
}

/* Medium */
@include breakpoint(medium up) {
  .grid-x > .cell.medium-1 {
    grid-column-end: span 1;
  }
  .grid-x > .cell.medium-2 {
    grid-column-end: span 2;
  }
  .grid-x > .cell.medium-3 {
    grid-column-end: span 3;
  }
  .grid-x > .cell.medium-4 {
    grid-column-end: span 4;
  }
  .grid-x > .cell.medium-5 {
    grid-column-end: span 5;
  }
  .grid-x > .cell.medium-6 {
    grid-column-end: span 6;
  }
  .grid-x > .cell.medium-7 {
    grid-column-end: span 7;
  }
  .grid-x > .cell.medium-8 {
    grid-column-end: span 8;
  }
  .grid-x > .cell.medium-9 {
    grid-column-end: span 9;
  }
  .grid-x > .cell.medium-10 {
    grid-column-end: span 10;
  }
  .grid-x > .cell.medium-11 {
    grid-column-end: span 11;
  }
  .grid-x > .cell.medium-12 {
    grid-column-end: span 12;
  }

  .grid-x > .cell.medium-offset-0 {
    grid-column-start: auto;
  }
  .grid-x > .cell.medium-offset-1 {
    grid-column-start: 2;
  }
  .grid-x > .cell.medium-offset-2 {
    grid-column-start: 3;
  }
  .grid-x > .cell.medium-offset-3 {
    grid-column-start: 4;
  }
  .grid-x > .cell.medium-offset-4 {
    grid-column-start: 5;
  }
  .grid-x > .cell.medium-offset-5 {
    grid-column-start: 6;
  }

  // .grid-x > .cell.medium-offset:not(:nth-child(1)) {
  //   grid-column-start: auto; // only use offset on the first child
  // }

  .grid-x.medium-up-1 > .cell {
    grid-column-end: span 12;
  }
  .grid-x.medium-up-2 > .cell {
    grid-column-end: span 6;
  }
  .grid-x.medium-up-4 > .cell {
    grid-column-end: span 3;
  }
  .grid-x.medium-up-6 > .cell {
    grid-column-end: span 2;
  }

  .medium-order-1 {
    order: 1;
  }
  .medium-order-2 {
    order: 2;
  }
  .medium-order-3 {
    order: 3;
  }
  .medium-order-4 {
    order: 4;
  }

  .hide-for-medium {
    display: none;
  }
  .show-for-medium {
    display: inherit;
  }
  .medium-flex-dir-row {
    flex-direction: row;
  }
}

/* Large */
@include breakpoint(large up) {
  .grid-x > .cell.large-1 {
    grid-column-end: span 1;
  }
  .grid-x > .cell.large-2 {
    grid-column-end: span 2;
  }
  .grid-x > .cell.large-3 {
    grid-column-end: span 3;
  }
  .grid-x > .cell.large-4 {
    grid-column-end: span 4;
  }
  .grid-x > .cell.large-5 {
    grid-column-end: span 5;
  }
  .grid-x > .cell.large-6 {
    grid-column-end: span 6;
  }
  .grid-x > .cell.large-7 {
    grid-column-end: span 7;
  }
  .grid-x > .cell.large-8 {
    grid-column-end: span 8;
  }
  .grid-x > .cell.large-9 {
    grid-column-end: span 9;
  }
  .grid-x > .cell.large-10 {
    grid-column-end: span 10;
  }
  .grid-x > .cell.large-11 {
    grid-column-end: span 11;
  }
  .grid-x > .cell.large-12 {
    grid-column-end: span 12;
  }

  .grid-x > .cell.large-offset-0 {
    grid-column-start: auto;
  }
  .grid-x > .cell.large-offset-1 {
    grid-column-start: 2;
  }
  .grid-x > .cell.large-offset-2 {
    grid-column-start: 3;
  }
  .grid-x > .cell.large-offset-3 {
    grid-column-start: 4;
  }
  .grid-x > .cell.large-offset-4 {
    grid-column-start: 5;
  }
  .grid-x > .cell.large-offset-5 {
    grid-column-start: 6;
  }

  // .grid-x > .cell.large-offset:not(:nth-child(1)) {
  //   grid-column-start: auto; // only use offset on the first child
  // }

  .grid-x.large-up-2 > .cell {
    grid-column-end: span 6;
  }
  .grid-x.large-up-4 > .cell {
    grid-column-end: span 3;
  }
  .grid-x.large-up-6 > .cell {
    grid-column-end: span 2;
  }

  .large-order-1 {
    order: 1;
  }
  .large-order-2 {
    order: 2;
  }
  .large-order-3 {
    order: 3;
  }
  .large-order-4 {
    order: 4;
  }

  .hide-for-large {
    display: none;
  }
  .show-for-large {
    display: inherit;
  }

  .large-flex-dir-row {
    flex-direction: row;
  }
}

/* XLarge */
@include breakpoint(xlarge up) {
  .grid-x > .cell.xlarge-2 {
    grid-column-end: span 2;
  }
  .grid-x > .cell.xlarge-3 {
    grid-column-end: span 3;
  }
  .grid-x > .cell.xlarge-4 {
    grid-column-end: span 4;
  }
  .grid-x > .cell.xlarge-5 {
    grid-column-end: span 5;
  }
  .grid-x > .cell.xlarge-6 {
    grid-column-end: span 6;
  }
  .grid-x > .cell.xlarge-7 {
    grid-column-end: span 7;
  }
  .grid-x > .cell.xlarge-8 {
    grid-column-end: span 8;
  }
  .grid-x > .cell.xlarge-9 {
    grid-column-end: span 9;
  }
  .grid-x > .cell.xlarge-10 {
    grid-column-end: span 10;
  }

  .hide-for-xlarge {
    display: none;
  }

  .show-for-xlarge {
    display: inherit;
  }
}

/* Small only over-rides*/
@media screen and (max-width: 640px) {
  .show-for-small-only {
    display: inherit;
  }

  .hide-for-small-only {
    display: none;
  }
}

.hide {
  display: none;
}
