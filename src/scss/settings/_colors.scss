/*
   Slightly lighten a color
   @access public
   @param {Color} $color - color to tint
   @param {Number} $percentage - percentage of `$color` in returned color
   @return {Color}
*/

@function tint($color, $percentage) {
  @return mix(white, $color, (100% - $percentage));
}

/*
   Slightly darken a color
   @access public
   @param {Color} $color - color to shade
   @param {Number} $percentage - percentage of `$color` in returned color
   @return {Color}
*/

// @function shade($color, $percentage) {
//   @return mix(black, $color, (100% - $percentage)); //percentage((100-$percentage)/100));
// }

// Shorthand colour variables
$light-mink: map-get($brand-palette, light-mink);
$medium-mink: map-get($brand-palette, medium-mink);
$dark-mink: map-get($brand-palette, dark-mink);
$energy-green: map-get($brand-palette, energy);
$energy-pink: map-get($brand-palette, energy-pink);
$energy-teal: map-get($brand-palette, energy-teal);
$energy-yellow: map-get($brand-palette, energy-yellow);
$energy-orange: map-get($brand-palette, energy-orange);
$energy-blue: map-get($brand-palette, energy-blue);
$energy-purple: map-get($brand-palette, energy-purple);
$energy-turq: map-get($brand-palette, energy-turq);
$heritage-green: map-get($brand-palette, heritage-green);
$heritage-berry: map-get($brand-palette, heritage-berry);
$heritage-teal: map-get($brand-palette, heritage-teal);
$heritage-yellow: map-get($brand-palette, heritage-yellow);
$heritage-orange: map-get($brand-palette, heritage-orange);
$heritage-blue: map-get($brand-palette, heritage-blue);
$heritage-navy: map-get($brand-palette, heritage-navy);
$heritage-purple: map-get($brand-palette, heritage-purple);

$pink-medium: map-get($brand-palette, pink-medium);
$pink-tint-40: map-get($brand-palette, pink-tint-40);

// Web versions
$web-turq: map-get($brand-palette, web-turq);

// These are variations permitted in the brank bank colours
$variations: (30, 50, 70);

/* 
   University of Stirling supplementary web colours
 */
@each $name, $hex in $uos-web-supplementary {
  // generate the text colour classes e.g. u-primary
  .u-#{$name} {
    color: $hex !important;
  }

  // generate the bg classes e.g. u-bg-primary
  .u-bg-#{$name} {
    background-color: $hex !important;
  }
}

/*
   University of Stirling brand palette colours
 */
@each $name, $hex in $brand-palette {
  // generate the text colour classes  e.g. u-heritage-green
  .u-#{$name} {
    color: $hex !important;
  }

  // generate the bg classes e.g. u-bg-heritage-green
  .u-bg-#{$name} {
    background-color: $hex !important;
  }

  .bg-#{$name} {
    border-image-source: linear-gradient($hex, $hex);
  }

  // generate the bg variation classes e.g. u-heritage-green--30
  // @each $perc in $variations {
  //   .u-bg-#{$name}--#{$perc} {
  //     background-color: tint($hex, $perc);
  //   }
  // }
}

// this is an exception for the grey section backgrounds
$bg-grey: $light-gray-2; //tint($light-mink, 15%);

// Used for full width wrappers
.u-bleed {
  border-image-slice: 0 fill;
  border-image-outset: 0 100vw 0 100vw;
}

/*
   white--all 
   will make any text within the element white
 */

.u-white--all {
  * {
    color: $white !important;

    &:after {
      color: $white !important;
    }
  }

  a {
    color: $white !important;

    &:hover {
      //border-bottom: 2px solid rgba(255, 255, 255, 0.5);
      text-decoration-color: rgba(255, 255, 255, 0.5);
    }

    &:before {
      background-color: $white !important; // <-- WHY?
    }

    &.button--back:before {
      background-color: transparent !important;
    }

    &.c-link {
      border-bottom: none;

      &:hover {
        border-bottom: none;
      }
    }
  }
}

.u-white--all {
  // .c-wysiwyg-content li a,
  // li a,
  // p a {
  //   border-bottom: none;
  // }

  // p a:hover {
  //   border-bottom: none;
  // }

  select {
    option,
    &:focus {
      color: #3a3c39 !important;
    }

    color: #3a3c39 !important;
  }
}

[class*="u-bg-"].u-white {
  h2,
  h3,
  a {
    color: $white;
  }
  a:not(.button) {
    border-bottom-width: 1px !important;
  }
}

/*
   u-white--all auto overrides 
   table bg is white/grey, so should be inherited
 */

.u-white--all {
  table,
  td,
  td strong,
  th strong,
  table p,
  table p strong,
  th {
    color: $black !important;

    a {
      color: $heritage-green !important;

      &:hover {
        color: $heritage-green !important;
      }
    }
  }

  input[type="search"] {
    color: $black !important;
  }
}

/*
  Override utility for u-white--all
*/

.u-unwhite--all {
  * {
    color: $black !important;

    &:after {
      color: $heritage-green !important;
    }
    &:before {
      color: $heritage-green !important;
    }
  }

  h1,
  h2 {
    color: $heritage-green;
  }

  a {
    color: $heritage-green !important;

    &:hover {
      color: $heritage-green !important;
    }
  }
}

a:has(img):hover {
  border-bottom: none !important;
}

/*
    Extended palette colours - Backgrounds 
 */

.u-bg-energy-purple--10 {
  background-color: tint($energy-purple, 10%);
}

.u-bg-energy-turq--10 {
  background-color: tint($energy-turq, 10%) !important;
}

.u-bg-energy-teal--darker {
  background-color: #017e89;
}

.u-bg-heritage-green--10 {
  background-color: tint($heritage-green, 10%) !important;
}

.u-bg-heritage-purple--10 {
  background-color: tint($heritage-purple, 10%) !important;
}

.u-bg-energy-pink {
  background-color: $energy-pink !important;
}

.u-bg-grey {
  background-color: $bg-grey !important;
}

.bg-grey {
  border-image-source: linear-gradient($bg-grey, $bg-grey);
}

.bg-dark-grey {
  border-image-source: linear-gradient($dark-grey, $dark-grey);
}

.u-bg-medium-dark-grey {
  background-color: #aeacac;
}

.u-bg-medium-grey {
  background-color: #d5d4d4;
}

.u-bg-light-medium-grey {
  background-color: #eeeeee;
}

.u-bg-light-grey {
  background-color: #f9f9f9;
}

/*
    Extended palette colours - Text 
 */

.u-energy-teal {
  color: $energy-teal;

  small {
    color: #01727d;
  }
}

.u-energy-teal--40,
.u-energy-teal--light {
  color: tint($energy-teal, 40%);
}

.u-heritage-teal {
  color: $heritage-teal;
}

.u-energy-purple {
  color: $energy-purple;
}
.u-heritage-purple {
  color: $heritage-purple;
}

.u-grey {
  color: $grey;
}

.u-dark-grey,
.u-grey--dark {
  color: $dark-grey; // #767169
}

/* [a11y] darker dark-grey text when on grey background */
.bg-grey {
  .u-dark-grey,
  .u-grey--dark {
    color: #726f65;
  }
}

.u-heritage-green {
  color: $heritage-green;
}

.u-enery-green {
  color: $energy-green; // Not accessible but can use to colour borders etc
}

.u-heritage-berry {
  color: $heritage-berry;
}

.u-energy-turq {
  color: $energy-turq;
}

.u-opacity-20 {
  opacity: 20%;
}

/*
  New brand 2025 colour packs
*/

.pinks {
  a,
  h2,
  h3,
  h4 {
    color: map-get($pinks, "medium");
  }
  a:not(.c-link) {
    border-bottom: 2px solid map-get($pinks, "light");
    &:hover {
      border-bottom: 2px solid map-get($pinks, "tint-7");
    }
  }
}

.greens {
  a,
  h2,
  h3,
  h4 {
    color: map-get($greens, "dark");
  }
  a:not(.c-link) {
    border-bottom: 2px solid map-get($greens, "light");
    &:hover {
      border-bottom: 2px solid map-get($greens, "tint-7");
    }
  }
}

.teals {
  h2,
  h3,
  h4 {
    color: map-get($teals, "light");
  }

  a {
    color: map-get($teals, "medium");
  }
  a:not(.c-link) {
    border-bottom: 2px solid map-get($teals, "light");
    &:hover {
      border-bottom: 2px solid map-get($teals, "tint-7");
    }
  }
}

.purples {
  a,
  h2,
  h3,
  h4 {
    color: map-get($purples, "medium");
  }
  a:not(.c-link) {
    border-bottom: 2px solid map-get($purples, "light");
    &:hover {
      border-bottom: 2px solid map-get($purples, "tint-7");
    }
  }
}

.blues {
  a,
  h2,
  h3,
  h4 {
    color: map-get($blues, "medium");
  }
  a:not(.c-link) {
    border-bottom: 2px solid map-get($blues, "light");
    &:hover {
      border-bottom: 2px solid map-get($blues, "tint-7");
    }
  }
}

.neutral-green {
  a,
  h2,
  h3,
  h4 {
    color: map-get($greens, "dark");
  }
  a:not(.c-link) {
    border-bottom: 2px solid map-get($greens, "light");
    &:hover {
      border-bottom: 2px solid map-get($greens, "tint-7");
    }
  }
  .u-font-icon {
    color: map-get($greens, "medium");
  }
}

@each $name, $color in $uos-colour-group-palette {
  .#{$name} {
    .u-font-icon {
      color: map-get($color, "medium");
    }

    a:hover {
      text-decoration-color: map-get($color, "light");
    }

    .c-wrapper-2025 {
      background-color: map-get($color, "tint-7");

      &.u-bleed {
        border-image-source: linear-gradient(map-get($color, "tint-7"), map-get($color, "tint-7"));
      }
    }

    .c-link::after {
      filter: icon-filter(map-get($color, "medium"));
    }

    .c-link::before {
      background-color: (map-get($color, "light"));
    }
  }
}

.dark {
  color: $white;
  a,
  h2,
  h3,
  h4,
  h5 {
    color: $white;
  }
  a {
    border-bottom: 2px solid $white;
  }

  .c-link::after {
    filter: brightness(0) invert(1);
  }

  .c-link::before {
    background-color: brightness(0) invert(1);
  }
}

/*
  .c-wrapper-2025 light overrides/additions
*/

.c-wrapper-2025.u-bleed.neutrals {
  background-color: white;
  &.u-bleed {
    border-image-source: linear-gradient($white, white);
  }
}

.c-wrapper-2025.u-bleed.neutral-green {
  background-color: map-get($neutrals, "tint-7");
  &.u-bleed {
    border-image-source: linear-gradient(map-get($neutrals, "tint-7"), map-get($neutrals, "tint-7"));
  }
}

/*
  .c-wrapper-2025 dark 
*/

.c-wrapper-2025.greens.dark {
  background-color: map-get($greens, "medium");
  &.u-bleed {
    border-image-source: linear-gradient(map-get($greens, "medium"), map-get($greens, "medium"));
  }
}

.c-wrapper-2025.teals.dark {
  background-color: map-get($teals, "medium");
  &.u-bleed {
    border-image-source: linear-gradient(map-get($teals, "medium"), map-get($teals, "medium"));
  }
}

.c-wrapper-2025.pinks.dark {
  background-color: map-get($pinks, "dark");
  &.u-bleed {
    border-image-source: linear-gradient(map-get($pinks, "dark"), map-get($pinks, "dark"));
  }
}

.c-wrapper-2025.purples.dark {
  background-color: map-get($purples, "dark");
  &.u-bleed {
    border-image-source: linear-gradient(map-get($purples, "dark"), map-get($purples, "dark"));
  }
}

.c-wrapper-2025.blues.dark {
  background-color: map-get($blues, "dark");
  &.u-bleed {
    border-image-source: linear-gradient(map-get($blues, "dark"), map-get($blues, "dark"));
  }
}

.c-wrapper-2025.neutrals.dark {
  background-color: map-get($neutrals, "dark");
  &.u-bleed {
    border-image-source: linear-gradient(map-get($neutrals, "dark"), map-get($neutrals, "dark"));
  }
}
